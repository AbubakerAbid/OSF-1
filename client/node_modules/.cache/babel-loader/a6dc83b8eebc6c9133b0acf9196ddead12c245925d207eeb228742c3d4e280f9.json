{"ast":null,"code":"import { AUTH, AUTH2 } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport { FETCH_ALL } from '../constants/actionTypes';\nexport const signin = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const signup = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router('/');\n  } catch (error) {\n    console.log(error);\n    //error.response.data\n  }\n};\n\nexport const workerSignin = (formData, router) => async dispatch => {\n  try {\n    const cred = {\n      username: formData[0],\n      password: formData[1]\n    };\n    const {\n      data\n    } = await api.workerSignIn(cred);\n    dispatch({\n      type: AUTH2,\n      data\n    });\n    router('/WorkerDashboard');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const workerSignup = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.workerSignUp(formData);\n    dispatch({\n      type: AUTH2,\n      data\n    });\n    router('/WorkerDashboard');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUsers = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchUsers();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getWorker = _ref => {\n  let {\n    username\n  } = _ref;\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await api.getWorker(password);\n      dispatch({\n        type: FETCH_ALL,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n};","map":{"version":3,"names":["AUTH","AUTH2","api","FETCH_ALL","signin","formData","router","dispatch","data","signIn","type","error","console","log","signup","signUp","workerSignin","cred","username","password","workerSignIn","workerSignup","workerSignUp","getUsers","fetchUsers","payload","message","getWorker"],"sources":["E:/OSFPK.COM-main/client/src/actions/auth.js"],"sourcesContent":["import { AUTH, AUTH2 } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\nimport { FETCH_ALL} from '../constants/actionTypes';\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n    //error.response.data\r\n    \r\n  }\r\n};\r\n\r\nexport const workerSignin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const cred = { username: formData[0], password: formData[1]};\r\n    const { data } = await api.workerSignIn(cred);\r\n\r\n    dispatch({ type: AUTH2, data });\r\n\r\n    router('/WorkerDashboard');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const workerSignup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.workerSignUp(formData);\r\n    \r\n    dispatch({ type: AUTH2, data });\r\n\r\n    router('/WorkerDashboard');\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n};\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchUsers();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getWorker = ({username}) => async (dispatch) => {\r\n  try {\r\n\r\n    const { data } = await api.getWorker(password);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}